name: 'Terragrunt CI'

on:
  - pull_request

env:
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: 'live/sa-east-1/ec2'

jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Terragrunt Format'
        id: fmt
        uses: the-commons-project/terragrunt-github-actions@1.0.6
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terragrunt Init'
        id: init
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terragrunt Validate'
        id: validate
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terragrunt Plan'
        id: plan
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: add-plan-comment
        id: comment
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
                    const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                    #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                    #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
                    #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

                    <details><summary>Show Plan</summary>

                    \`\`\`${process.env.PLAN}\`\`\`

                    </details>

                    *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

                    github.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: output
                    })